{"version":3,"sources":["components/appHeader/AppHeader.jsx","components/errorMesage/error.gif","components/errorMesage/ErrorMessage.jsx","components/errorBoundary/ErrorBoundary.jsx","components/skeleton/Skeleton.jsx","components/spinner/Spinner.jsx","utils/setContent.js","services/MarvelService.js","hooks/http.hook.js","config/config.js","resources/img/mjolnir.png","components/randomChar/RandomChar.jsx","utils/setContents.js","components/charList/CharList.jsx","components/charInfo/CharInfo.jsx","resources/img/vision.png","components/CharSearchForm/CharSearchForm.js","pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.jsx","components/comicsList/ComicsList.jsx","pages/ComicsPage.js","pages/404.js","pages/SingleComicPage/SingleComicPage.js","pages/SinglePage.js","pages/singleCharacterLayout/singleCharacterLayout.js","components/app/App.jsx","index.js"],"names":["AppHeader","className","to","style","color","isActive","end","display","width","heigth","objectFit","margin","ErrorMessage","src","error","alt","ErrorBoundary","state","componentDidCatch","info","setState","this","props","children","Component","Skeleton","Spinner","xmlns","background","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","setContent","process","data","Error","useMarvelService","useState","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","ok","status","json","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","__transformComics","getComics","getCharacterByName","name","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","href","RandomChar","setChar","useEffect","updateChar","timer","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","onClick","mjolnir","newItemLoading","CharList","onCharSelected","charList","setCharList","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","setContents","arr","index","CSSTransition","timeout","classNames","ref","element","onKeyPress","event","key","TransitionGroup","component","renderItems","disabled","protoTypes","propTypes","func","isRequired","resourceURI","CharInfo","charId","CharSearchForm","loading","errorMessage","initialValues","charName","validationSchema","yup","required","onSubmit","htmlFor","placeholder","MainPage","selectedChar","setSelectedChar","Helmet","content","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","i","renderComics","ComicsPage","Page404","SingleComicPage","navigate","useNavigate","cursor","SinglePage","dataType","useParams","setData","updateData","comicId","onDataLoaded","SingleCharacterLayout","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8069dd2a.chunk.js","sourcesContent":["import { Link, NavLink } from \"react-router-dom\";\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to='/'>\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li>\n                        <NavLink style={({isActive}) => ({color: isActive ? '#9f0013' : 'inherit'})}\n                                 to='/'\n                                 end\n                        > Characters</NavLink>\n                    </li>\n                    /\n                    <li>\n                        <NavLink style={({isActive}) => ({color: isActive ? '#9f0013' : 'inherit'})}\n                                 to='/Comics'\n                        > Comics</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\n\nconst ErrorMessage = () =>\n        <img src={error}\n             alt=\"Error\"\n             style={style}/>\n             \nconst style = {\n    display: 'block',\n    width: '250px',\n    heigth: '250px',\n    objectFit: 'contain',\n    margin: '0 auto'\n}\n\nexport default ErrorMessage;","import { Component } from \"react\";\n\nimport ErrorMessage from \"../errorMesage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","import Skeleton from \"../components/skeleton/Skeleton\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport ErrorMessage from \"../components/errorMesage/ErrorMessage\";\n\nconst setContent = (process, Component, data) => {\n    switch (process) {\n        case 'waiting' : return <Skeleton/>;\n        case 'loading' : return <Spinner/>;\n        case 'confirmed': return <Component data={data}/>;\n        case 'error' : return <ErrorMessage/>;\n        default : throw new Error('Unexpected process state');\n    }\n}\n\nexport default setContent;","import useHttp from \"../hooks/http.hook\";\nimport { API_KEY, API_URL } from \"../config/config\";\n\nexport default function useMarvelService() {\n\n    const { request, clearError, process, setProcess } = useHttp();\n\n    const _apiBase = API_URL;\n    const _apiKey = API_KEY;\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    };\n\n    const getCharacter = async id => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    };\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(__transformComics);\n    }\n\n    const getComics = async id => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return __transformComics(res.data.results[0]);\n    }\n\n    const getCharacterByName = async name => {\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    };\n\n    const _transformCharacter = char => ({\n        id: char.id,\n        name: char.name,\n        description: char.description ? `${char.description.slice(0, 210)}...` : char.description ?\n                     char.description = \"\" : 'There is no description for this character',\n        thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n        homepage: char.urls[0].url,\n        wiki: char.urls[1].url,\n        comics: char.comics.items\n    });\n\n    const __transformComics = comics => ({\n        id: comics.id,\n        title: comics.title,\n        description: comics.description,\n        pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n        thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\n        language: comics.textObjects.language || 'en-us',\n        price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n    });\n\n    return {\n        getAllCharacters,\n        getCharacter,\n        clearError,\n        getAllComics,\n        getComics,\n        getCharacterByName,\n        process,\n        setProcess\n    };\n}","import {useState, useCallback} from \"react\";\n\nexport default function useHttp() {\n\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (\n        url,\n        method = 'GET',\n        body = null,\n        headers = {\n            'Content-Type': 'application/json'\n        }\n    ) => {\n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            return data;\n        } catch (e) {\n            setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return { request, clearError, process, setProcess };\n}\n\n","export const API_URL = process.env.REACT_APP_API_URL;\n\nexport const API_KEY = process.env.REACT_APP_API_KEY;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useEffect, useState} from 'react';\n\nimport setContent from \"../../utils/setContent\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n\n    useEffect(() => {\n        updateChar();\n        const timer = setInterval(updateChar, 60000);\n        return () => clearInterval(timer);\n    }, []);\n\n    const { getCharacter, clearError, process, setProcess} = useMarvelService();\n\n    const onCharLoaded = char => setChar(char);\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    return (\n        <div className=\"randomchar\">\n            { setContent(process, View, char) }\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar} >\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({ data }) => {\n    const { name, description, thumbnail, homepage, wiki } = data;\n\n    const imgStyle = thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ||\n    \"http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif\" ? {'objectFit': 'contain'} : {'objectFit': 'cover'};\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail}\n                 alt=\"Random character\"\n                 className=\"randomchar__img\"\n                 style={imgStyle}\n            />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">\n                    {name}\n                </p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">\n                            homepage\n                        </div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">\n                            Wiki\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RandomChar;","import Spinner from \"../components/spinner/Spinner\";\nimport ErrorMessage from \"../components/errorMesage/ErrorMessage\";\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting' : return <Spinner/>;\n        case 'loading' : return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed': return <Component/>;\n        case 'error' : return <ErrorMessage/>;\n        default : throw new Error('Unexpected process state');\n    }\n}\n\nexport default setContent;","import {useState, useEffect, useRef, useMemo} from 'react';\nimport propTypes from 'prop-types';\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContents from \"../../utils/setContents\";\n\nimport './charList.scss';\n\nconst CharList = ({onCharSelected}) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n    const { getAllCharacters, process, setProcess } = useMarvelService();\n\n    useEffect(() => onRequest(offset, true), []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n            .then(() => setProcess('confirmed'));\n    };\n\n    const onCharListLoaded = newCharList => {\n        let ended = false;\n        if (newCharList.length < 9) ended = true;\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 9);\n        setCharEnded(ended);\n    };\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = id => {\n        itemRefs.current.forEach(item => item.classList.remove(\"char__item_selected\"));\n        itemRefs.current[id].classList.add(\"char__item_selected\");\n        itemRefs.current[id].focus();\n    };\n\n    const renderItems = arr => {\n        const items = arr.map((item, index) => {\n            const { name, thumbnail, id } = item;\n            const imgStyle = thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ||\n            \"http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif\" ? {'objectFit': 'contain'} : {'objectFit': 'cover'};\n            \n            return (\n                <CSSTransition key={id} timeout={500} classNames='char__item'>\n                    <li className='char__item'\n                        ref={element => itemRefs.current[index] = element}\n                        onKeyPress={event =>  {\n                            if (event.key === \"\" || event.key === \"Enter\") {\n                                this.props.onCharSelected(id);\n                                focusOnItem(index);\n                            }\n                        }}\n                        onClick={() => {\n                            onCharSelected(id);\n                            focusOnItem(index);\n                        }}>\n                        <img src={thumbnail} alt={name} style={imgStyle} />\n                        <div className=\"char__name\">{name}</div>\n                    </li>\n                </CSSTransition>\n            );\n        });\n\n        return (\n            <ul className='char__grid'>\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        );\n    };\n\n    const elements = useMemo(() => (\n        setContents(process, () => renderItems(charList), newItemLoading)\n    ), [process])\n\n    return (\n        <div className=\"char__list\">\n            {elements}\n            <button className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">\n                    load more\n                </div>\n            </button>\n        </div>\n    );\n}\n\nCharList.protoTypes = {\n    onCharSelected: propTypes.func.isRequired\n};\n\nexport default CharList;","import {  Fragment, useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\n\nimport './charInfo.scss';\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nconst CharInfo = ({charId}) => {\n\n    const [char, setChar] = useState(null);\n    const { getCharacter, clearError, process, setProcess } = useMarvelService();\n    useEffect(() => updateChar(), [charId]);\n    useEffect(() => setProcess('waiting'), []);\n\n    const updateChar = () => {\n        clearError();\n        if (!charId) return;\n        getCharacter(charId)\n            .then(onCharLoaded)\n            .then(() => setProcess('confirmed'))\n    };\n\n    const onCharLoaded = char => setChar(char);\n\n    return (\n        <div className=\"char__info\">\n            { setContent(process, View, char) }\n        </div>\n    )\n}\n\nconst View = ({ data }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = data;\n\n    const imgStyle = thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ?\n        { 'objectFit': 'contain' } : { 'objectFit': 'cover' };\n    \n    return (\n        <Fragment>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : \"Sorry, this character doesn't have his own comics\"}\n                { comics.map((item, index) => {\n                    const id = item.resourceURI.slice(43);\n                    // eslint-disable-next-line\n                    if (index > 9) return;\n                    return <li className=\"char__comics-item\" key={index}>\n                        <Link to={`/comics/${id}`}>\n                            {item.name}\n                        </Link>\n                    </li>\n                }) }\n            </ul>\n        </Fragment>\n    );\n}\n\nCharInfo.propTypes = {\n    charId: propTypes.number\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from \"react\";\nimport {ErrorMessage as FormikErrorMessage, Field, Form, Formik} from \"formik\";\nimport * as yup from 'yup';\nimport {Link} from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport errorMessage from \"../errorMesage/ErrorMessage\";\n\nimport './CharSearchForm.scss';\nimport setContent from \"../../utils/setContent\";\n\nconst CharSearchForm = () => {\n    const [char, setChar] = useState(null);\n    const { loading, error, getCharacterByName, clearError, process, setProcess } = useMarvelService();\n\n    const onCharLoaded = char => setChar(char);\n\n    const updateChar = name => {\n        clearError();\n        getCharacterByName(name).then(onCharLoaded);\n    };\n\n    const errorMessage = error ? <div className=\"char__search-critical-error\"> <errorMessage/> </div> : null;\n\n    const results = !char ? null : char.length > 0 ?\n        <div className=\"char__search-wrapper\">\n            <div className=\"char__search-success\"> There is! Visit {char[0].name} page? </div>\n            <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\n                <div className=\"inner\"> To page </div>\n            </Link>\n        </div> :\n        <div className=\"char__search-error\">\n            The character was not found. Check the name and try again\n        </div>;\n\n    return (\n        <div className=\"char__search-form\">\n            <Formik\n                initialValues = {{ charName: '' }}\n                validationSchema = {yup.object({\n                    charName: yup.string().required('This field is required')\n                })}\n                onSubmit = { ({charName}) => updateChar(charName)}\n            >\n                <Form>\n                    <label className=\"char__search-label\" htmlFor=\"charName\"> Or find a character by name: </label>\n                    <div className=\"char__search-wrapper\">\n                        <Field id=\"charName\"\n                               name='charName'\n                               type='text'\n                               placeholder=\"Enter name\"/>\n                        <button type='submit'\n                                className=\"button button__main\"\n                                disabled={loading}\n                        >\n                            <div className=\"inner\"> find </div>\n                        </button>\n                    </div>\n                    <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\n                </Form>\n            </Formik>\n            {results}\n            {errorMessage}\n        </div>\n    )\n};\n\nexport default CharSearchForm;","import {useState} from \"react\";\nimport {Helmet} from \"react-helmet\";\n\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\nimport RandomChar from \"../components/randomChar/RandomChar\";\nimport CharList from \"../components/charList/CharList\";\nimport CharInfo from \"../components/charInfo/CharInfo\";\nimport decoration from \"../resources/img/vision.png\";\nimport CharSearchForm from \"../components/CharSearchForm/CharSearchForm\";\n\nconst MainPage = () => {\n\n    const [selectedChar, setSelectedChar] = useState(null);\n\n    const onCharSelected = id => setSelectedChar(id);\n\n    return (\n        <>\n            <Helmet>\n                <meta name=\"description\"\n                      content=\"Marvel information portal\"\n                />\n                <title> Marvel information portal </title>\n            </Helmet>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected}/>\n                </ErrorBoundary>\n                <div>\n                    <ErrorBoundary>\n                        <CharInfo charId={selectedChar}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharSearchForm/>\n                    </ErrorBoundary>\n                </div>\n            </div>\n\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    );\n};\n\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContents from \"../../utils/setContents\";\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [ comicsList, setComicsList ] = useState([]);\n    const [ newItemLoading, setNewItemLoading ] = useState(false);\n    const [ offset, setOffset ] = useState(0);\n    const [ comicsEnded, setComicsEnded ] = useState(false);\n\n    useEffect(() => onRequest( offset, true ), []);\n\n    const { getAllComics, process, setProcess } = useMarvelService();\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'));\n    };\n\n    const onComicsListLoaded = comics => {\n        let ended = false;\n        if (comics.length < 8) {\n            ended = true;\n        }\n        setComicsList(comicsList => [...comicsList, ...comics]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    };\n\n    const renderComics = arr => {\n        const comics = arr.map((item, i) => {\n            const {id, thumbnail, title, price} = item;\n            return <li className=\"comics__item\" key={i}>\n                        <Link to={`/comics/${id}`}>\n                            <img src={thumbnail}\n                                 alt={title}\n                                 className=\"comics__item-img\"\n                            />\n                            <div className=\"comics__item-name\">\n                                {title}\n                            </div>\n                            <div className=\"comics__item-price\">\n                                {`${price}$`}\n                            </div>\n                        </Link>\n                    </li>\n        });\n        return <ul className=\"comics__grid\">\n            {comics}\n        </ul>\n    };\n    return (\n        <div className=\"comics__list\">\n            { setContents(process, () => renderComics(comicsList), newItemLoading) }\n            <button className=\"button button__main button__long\"\n                    style={{'display' : comicsEnded ? 'none' : 'block'}}\n                    disabled={newItemLoading}\n                    onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import {Helmet} from \"react-helmet\";\n\nimport AppBanner from \"../components/appBanner/AppBanner\";\nimport ComicsList from \"../components/comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n  return (\n      <>\n          <Helmet>\n              <meta name={'Comics Page'}\n                    content={'Page with list of our comics'}\n              />\n              <title> Comics Page  </title>\n          </Helmet>\n          <AppBanner/>\n          <ComicsList/>\n      </>\n  );\n};\n\nexport default ComicsPage;","import ErrorMessage from \"../components/errorMesage/ErrorMessage\";\nimport {Link} from \"react-router-dom\";\n\nconst Page404 = () => {\n  return (\n    <div>\n        <ErrorMessage/>\n        <p style={{\n            'textAlign': 'center',\n            'fontWeigh': 'bold',\n            'fontSize': '24px'\n        }}> Page doesn't exist </p>\n        <Link style={{\n            'display': 'block',\n            'textAlign': 'center',\n            'fontWeigh': 'bold',\n            'fontSize': '24px',\n            'marginTop': '30px'\n        }} to={'..'}> Back to main page </Link>\n    </div>\n  );\n};\n\nexport default Page404;","import {Helmet} from \"react-helmet\";\nimport {useNavigate} from \"react-router-dom\";\n\nimport './singleComic.scss';\n\nconst SingleComicPage = ({ data }) => {\n    const navigate = useNavigate();\n    const { title, description, pageCount, thumbnail, language, price } = data;\n\n    const prices = price === 'not available' ? 'There is no price' : `${price}$`;\n\n    return (\n        <div className=\"single-comic\">\n            <Helmet>\n                <meta name={'Comics Page'}\n                      content={`${title} comics book`}\n                />\n                <title>{ title }</title>\n            </Helmet>\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\"> {title} </h2>\n                <p className=\"single-comic__descr\"> {description} </p>\n                <p className=\"single-comic__descr\"> {pageCount} </p>\n                <p className=\"single-comic__descr\"> {language} </p>\n                <div className=\"single-comic__price\"> {prices} </div>\n            </div>\n            <a style={{cursor: 'pointer'}} onClick={() => navigate(-1)} className=\"single-comic__back\"> Back to all </a>\n        </div>\n    );\n};\nexport default SingleComicPage;","import {useNavigate, useParams} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\n\nimport useMarvelService from \"../services/MarvelService\";\nimport AppBanner from \"../components/appBanner/AppBanner\";\nimport setContent from \"../utils/setContent\";\n\nconst SinglePage = ({ Component, dataType }) => {\n    const id = useParams();\n    const [data, setData] = useState(null);\n    const { getComics, getCharacter, clearError, process, setProcess } = useMarvelService();\n\n    const navigate = useNavigate();\n\n    useEffect(() => updateData(), [id])\n\n    const updateData = () => {\n        clearError();\n\n        switch (dataType) {\n            case 'comic':\n                getComics(id.comicId).then(onDataLoaded).then(() => setProcess('confirmed'));\n                break;\n            case 'character':\n                getCharacter(id.id).then(onDataLoaded).then(() => setProcess('confirmed'));\n                break;\n        }\n    }\n\n    const onDataLoaded = (data) => setData(data);\n\n    return (\n        <>\n            <AppBanner/>\n            { setContent(process, Component, data) }\n        </>\n    )\n};\n\nexport default SinglePage;","import {Helmet} from \"react-helmet\";\nimport {useNavigate} from \"react-router-dom\";\n\nimport './singleCharacterLayout.scss';\n\nconst SingleCharacterLayout = ({ data }) => {\n    const navigate = useNavigate();\n    const {name, description, thumbnail} = data;\n\n    return (\n        <div className=\"single-comic\">\n            <Helmet>\n                <meta name={'Comics Page'}\n                      content={`${name} comics book`}\n                />\n                <title>{ name }</title>\n            </Helmet>\n            <img src={thumbnail} alt={name} className=\"single-comic__char-img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{name}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n            </div>\n            <a style={{cursor: 'pointer'}} onClick={() => navigate(-1)} className=\"single-comic__back\"> Back to all </a>\n        </div>\n    )\n}\n\nexport default SingleCharacterLayout;","import {\n    BrowserRouter as Router,\n    Route,\n    Routes\n} from \"react-router-dom\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport MainPage from \"../../pages/MainPage\";\nimport ComicsPage from \"../../pages/ComicsPage\";\nimport Page404 from \"../../pages/404\";\nimport SingleComicPage from \"../../pages/SingleComicPage/SingleComicPage\";\nimport SinglePage from \"../../pages/SinglePage\";\nimport SingleCharacterLayout from \"../../pages/singleCharacterLayout/singleCharacterLayout\";\n\nconst App = () => {\n    return (\n        <Router basename=\"/react-marvel/\">\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                   <Routes>\n                       <Route path={'/'} element={<MainPage/>}/>\n                       <Route path={'/comics'} element={<ComicsPage/>}/>\n                       <Route end path={'/comics/:comicId'}\n                              element={<SinglePage Component={SingleComicPage} dataType={'comic'} />}\n                       />\n                       <Route end path={'/characters/:id'}\n                              element={<SinglePage Component={SingleCharacterLayout} dataType={'character'} />}\n                       />\n                       <Route path={'*'} element={<Page404/>}/>\n                   </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}